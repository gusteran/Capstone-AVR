
Capstone PCB Swarm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000216  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000216  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000098  00000000  00000000  00000245  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001241  00000000  00000000  000002dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000a22  00000000  00000000  0000151e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000580  00000000  00000000  00001f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000224  00000000  00000000  000024c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002a3  00000000  00000000  000026e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000a21  00000000  00000000  00002987  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000a0  00000000  00000000  000033a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000019e  0000019e  00000212  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003448  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.__vector_16 0000001e  00000162  00000162  000001d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__vector_15 0000001e  00000180  00000180  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    0000007c  000000e6  000000e6  0000015a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .bss.microseconds 00000004  00800100  00800100  00000216  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
   4:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
   8:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
   c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  10:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  14:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  18:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  1c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  20:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  24:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  28:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  2c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  30:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  34:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  38:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  3c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__vector_15>
  40:	0c 94 b1 00 	jmp	0x162	; 0x162 <__vector_16>
  44:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  48:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  4c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  50:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  54:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  58:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  5c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  60:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  64:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  68:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  6c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  70:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  74:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  78:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  7c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  80:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  84:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
  88:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 04       	cpc	r0, r1
  90:	80 00       	.word	0x0080	; ????

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf ef       	ldi	r28, 0xFF	; 255
  98:	d0 e1       	ldi	r29, 0x10	; 16
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	17 c0       	rjmp	.+46     	; 0xd4 <__do_clear_bss+0x8>
  a6:	b5 91       	lpm	r27, Z+
  a8:	a5 91       	lpm	r26, Z+
  aa:	35 91       	lpm	r19, Z+
  ac:	25 91       	lpm	r18, Z+
  ae:	05 91       	lpm	r16, Z+
  b0:	07 fd       	sbrc	r16, 7
  b2:	0c c0       	rjmp	.+24     	; 0xcc <__do_clear_bss>
  b4:	95 91       	lpm	r25, Z+
  b6:	85 91       	lpm	r24, Z+
  b8:	ef 01       	movw	r28, r30
  ba:	f9 2f       	mov	r31, r25
  bc:	e8 2f       	mov	r30, r24
  be:	05 90       	lpm	r0, Z+
  c0:	0d 92       	st	X+, r0
  c2:	a2 17       	cp	r26, r18
  c4:	b3 07       	cpc	r27, r19
  c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x20>
  c8:	fe 01       	movw	r30, r28
  ca:	04 c0       	rjmp	.+8      	; 0xd4 <__do_clear_bss+0x8>

000000cc <__do_clear_bss>:
  cc:	1d 92       	st	X+, r1
  ce:	a2 17       	cp	r26, r18
  d0:	b3 07       	cpc	r27, r19
  d2:	e1 f7       	brne	.-8      	; 0xcc <__do_clear_bss>
  d4:	e1 39       	cpi	r30, 0x91	; 145
  d6:	f4 07       	cpc	r31, r20
  d8:	31 f7       	brne	.-52     	; 0xa6 <__do_copy_data+0x8>
  da:	0e 94 73 00 	call	0xe6	; 0xe6 <_etext>
  de:	0c 94 71 00 	jmp	0xe2	; 0xe2 <_exit>

000000e2 <_exit>:
  e2:	f8 94       	cli

000000e4 <__stop_program>:
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <__stop_program>

Disassembly of section .text:

0000019e <__bad_interrupt>:
 19e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_16:

00000162 <__vector_16>:
	TCNT0 = 0;
	TCCR0 = (1 << WGM01) | (1 << CS01);
	TIMSK = (1 << TOIE0);
}

ISR(TIMER0_OVF_vect) {
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	8f 93       	push	r24
	//cli();
    PORTB ^= 1 << IR_LED;
 16e:	88 b3       	in	r24, 0x18	; 24
 170:	80 58       	subi	r24, 0x80	; 128
 172:	88 bb       	out	0x18, r24	; 24
	//microseconds++;
	//sei();
}
 174:	8f 91       	pop	r24
 176:	0f 90       	pop	r0
 178:	0f be       	out	0x3f, r0	; 63
 17a:	0f 90       	pop	r0
 17c:	1f 90       	pop	r1
 17e:	18 95       	reti

Disassembly of section .text.__vector_15:

00000180 <__vector_15>:

ISR(TIMER0_COMP_vect) {
 180:	1f 92       	push	r1
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	8f 93       	push	r24
	PORTB ^= 1 << IR_LED;
 18c:	88 b3       	in	r24, 0x18	; 24
 18e:	80 58       	subi	r24, 0x80	; 128
 190:	88 bb       	out	0x18, r24	; 24
	//microseconds++;
}
 192:	8f 91       	pop	r24
 194:	0f 90       	pop	r0
 196:	0f be       	out	0x3f, r0	; 63
 198:	0f 90       	pop	r0
 19a:	1f 90       	pop	r1
 19c:	18 95       	reti

Disassembly of section .text.main:

000000e6 <main>:
    uint8_t sum = 0;
    for (int i = 0; i < PACKET_SIZE * BYTE_SIZE && i < packet->packetSize * BYTE_SIZE; i++) {
        sum += (packet->packetMessage[i / BYTE_SIZE] >> (i % BYTE_SIZE)) & 1;
    }
    return sum;
}
  e6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
  ea:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  ee:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  f2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
  f6:	88 b3       	in	r24, 0x18	; 24
  f8:	8f 77       	andi	r24, 0x7F	; 127
  fa:	88 bb       	out	0x18, r24	; 24
  fc:	2f ef       	ldi	r18, 0xFF	; 255
  fe:	30 e7       	ldi	r19, 0x70	; 112
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	21 50       	subi	r18, 0x01	; 1
 104:	30 40       	sbci	r19, 0x00	; 0
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x1c>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x26>
 10c:	00 00       	nop
 10e:	88 b3       	in	r24, 0x18	; 24
 110:	80 68       	ori	r24, 0x80	; 128
 112:	88 bb       	out	0x18, r24	; 24
 114:	9f ef       	ldi	r25, 0xFF	; 255
 116:	24 e3       	ldi	r18, 0x34	; 52
 118:	3c e0       	ldi	r19, 0x0C	; 12
 11a:	91 50       	subi	r25, 0x01	; 1
 11c:	20 40       	sbci	r18, 0x00	; 0
 11e:	30 40       	sbci	r19, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x34>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x3e>
 124:	00 00       	nop
 126:	88 b3       	in	r24, 0x18	; 24
 128:	8f 77       	andi	r24, 0x7F	; 127
 12a:	88 bb       	out	0x18, r24	; 24
 12c:	8e e6       	ldi	r24, 0x6E	; 110
 12e:	83 bd       	out	0x23, r24	; 35
 130:	80 e8       	ldi	r24, 0x80	; 128
 132:	87 bb       	out	0x17, r24	; 23
 134:	99 e1       	ldi	r25, 0x19	; 25
 136:	95 bd       	out	0x25, r25	; 37
 138:	14 bc       	out	0x24, r1	; 36
 13a:	94 e6       	ldi	r25, 0x64	; 100
 13c:	91 bf       	out	0x31, r25	; 49
 13e:	12 be       	out	0x32, r1	; 50
 140:	9a e0       	ldi	r25, 0x0A	; 10
 142:	93 bf       	out	0x33, r25	; 51
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	97 bf       	out	0x37, r25	; 55
 148:	9f ef       	ldi	r25, 0xFF	; 255
 14a:	24 e3       	ldi	r18, 0x34	; 52
 14c:	3c e0       	ldi	r19, 0x0C	; 12
 14e:	91 50       	subi	r25, 0x01	; 1
 150:	20 40       	sbci	r18, 0x00	; 0
 152:	30 40       	sbci	r19, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0x68>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0x72>
 158:	00 00       	nop
 15a:	15 bc       	out	0x25, r1	; 37
 15c:	78 94       	sei
 15e:	87 bb       	out	0x17, r24	; 23
 160:	ff cf       	rjmp	.-2      	; 0x160 <main+0x7a>
